<div class="container">
	<h2>Growth</h2>

	<p>Select a year</p>
	<%= form_tag '/stats', method: :get do %>
	  <%= select_tag 'year', options_for_select((2014..Date.current.year).to_a, @year) %>
	  <%= submit_tag("search") %>
	<% end %>

	<table class="table table-bordered">
	  <tr>
	    <td>Title</td>
	    <td>January</td>
	    <td>February</td>
	    <td>March</td>
	    <td>April</td>
	    <td>May</td>
	    <td>June</td>
	    <td>July</td>
	    <td>August</td>
	    <td>September</td>
	    <td>October</td>
	    <td>November</td>
	    <td>December</td>
	  </tr>
	  <% get_models.each do |model| %>
	    <tr>
	      <td><p><%= model.pluralize %></p></td>
	      <% (1..12).each do |month| %>
	        <td><%= by_month(by_year(model.constantize, @year), month).count %></td>
	      <% end %>
	    </tr>

	    <tr>
	      <td></td>
	      <% (1..12).each do |month| %>
	        <% current_month_count = by_month(by_year(model.constantize, @year), month).count %>
	        <% before_current_month_count = by_month(by_year(model.constantize, @year), month - 1).count %>

	        <td><%= change_in_percentage(current_month_count, before_current_month_count) %></td>
	      <% end %>
	    </tr>
	  <% end %>
	</table>

	<div class="row">
		<div class="col-md-12">
			<h2>Totals</h2>
		  <% get_models.each do |model| %>
				<div class="col-md-3">
					<%= model.constantize %>
					<%= model.constantize.count %>
				</div>
			<% end %>
		</div>
	</div>

  <h1>Associations</h1>
  <%= form_tag '/stats', method: :get, class: 'mb-5' do %>
    <%= select_tag 'models', grouped_options_for_select(get_grouped_options, nil, prompt: 'Select model') %>
    <%= submit_tag("submit") %>
  <% end %>

  <% if @parent_model.present? && @child_model.present? %>
    <div class="mt-2">
      <p><%= pluralize_constant(@parent_model).capitalize %> that have created <%= pluralize_constant(@child_model) %>: <%= @model_joined_with_child.count %></p>
      <p>Total <%= pluralize_constant(@child_model) %> created: <%= @child_model.count %></p>

      <% @counts.each do |k, v| %>
        <p><b><%= v %> <%= pluralize_constant(@parent_model) %></b> have <b><%= pluralize(k,  @child_model.to_s.downcase) %> (<%= ( v.to_f / @model_joined_with_child.distinct.count.to_f ).signif(2) * 100 %>% of <%= pluralize_constant(@parent_model).capitalize %>)</b></p>

        <% @grouped_model_joined_with_child.having("count(#{pluralize_constant(@child_model)}.id) = ?", k).count.each do |key, value| %>
           <% parent = @parent_model.find(key) %>
					 					 
           <% first_child = parent.public_send(pluralize_constant(@child_model))[0].created_at.time %>
           <% last_child = parent.public_send(pluralize_constant(@child_model))[k-1].created_at.time %>

           <% t = first_child - last_child %>

           <% mm, ss = t.divmod(60) %>
           <% hh, mm = mm.divmod(60) %>
           <% dd, hh = hh.divmod(24) %>
           <% if dd <= 7 %>
             <% @seven_days_or_less += 1 %>
           <% elsif dd >= 21 %>
             <% @twenty_one_days_or_more += 1 %>
           <% else %>
             <% @between_seven_and_twenty += 1 %>
           <% end %>
        <% end %>

        <div class="ml-5">
          <p><%= @seven_days_or_less %> of these <%= pluralize_constant(@parent_model) %> created their first and last <%= @child_model.to_s.downcase %> within 7 days</p>
          <p><%= @between_seven_and_twenty %> of these <%= pluralize_constant(@parent_model) %> created their first and last <%= @child_model.to_s.downcase %> between 7 and 21 days</p>
          <p><%= @twenty_one_days_or_more %> of these <%= pluralize_constant(@parent_model) %> created their first and last <%= @child_model.to_s.downcase %> over 21 days apart (HIGH RETENTION)</p>
        </div>
      <% end %>
    </div>
  <% end %>
</div>